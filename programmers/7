// ArrayList => Array: String[] answer = arr.toArray(new String[arr.size()]);
// Arr => ArrayList : ArrayList<String> arr = new ArrayList<>(Arrays.asList(answer));

import java.util.ArrayList;
class Solution {
    public String[] solution(String[] todo_list, boolean[] finished) {
        ArrayList<String> arr = new ArrayList<>();
        for(int i = 0; i<finished.length; i++){
            if(!finished[i]){
                arr.add(todo_list[i]);
            }
        }
        
        String[] answer = arr.toArray(new String[arr.size()]);
        
        return answer;
    }
}

import java.util.ArrayList;
class Solution {
    public String[] solution(String[] strArr) {
        ArrayList<String> arr = new ArrayList<>();
        for(int i = 0; i<strArr.length; i++){
            if(!strArr[i].contains("ad")){
                arr.add(strArr[i]);
            }
        }
        String[] answer = arr.toArray(new String[arr.size()]);
        return answer;
    }
}

class Solution {
    public int solution(String binomial) {
        int answer = 0;
        String[] stArr = binomial.split(" ");
        int a = Integer.valueOf(stArr[0]);
        int b = Integer.valueOf(stArr[2]);
        if(stArr[1].equals("+")){
            answer = a+b;
        }
        else if(stArr[1].equals("-")){
            answer = a-b;
        }
        else if(stArr[1].equals("*")){
            answer = a*b;
        }
        return answer;
    }
}

class Solution {
    public int solution(String number) {
        int answer = 0;
        int sum = 0;
        for(int i = 0; i<number.length(); i++){
            sum+= Character.getNumericValue(number.charAt(i));
        }
        answer = sum%9;
        return answer;
    }
}

class Solution {
    public int[] solution(int[] arr, int[][] intervals) {
        int s = (intervals[0][1] - intervals[0][0])+(intervals[1][1] - intervals[1][0])+2;
        int[] answer = new int[s];
        int idx = 0;
        for(int j = intervals[0][0]; j<=intervals[0][1]; j++){
            answer[idx++] = arr[j];
        }
        for(int j = intervals[1][0]; j<=intervals[1][1]; j++){
            answer[idx++] = arr[j];
        }
        return answer;
    }
}

