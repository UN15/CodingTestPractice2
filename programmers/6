class Solution {
    public String solution(String myString) {
        String answer = "";
        for(int i = 0; i<myString.length(); i++){
            char c = myString.charAt(i);
            if(c<'l')
                answer+='l';
            else
                answer+=c;
        }
        return answer;
    }
}
or  // replaceAll, 정규식인 [a-k] 이용
class Solution {
    public String solution(String myString) {
        String answer = "";
        answer = myString.replaceAll("[a-k]", "l");
        return answer;
    }
}

import java.util.*;
class Solution {
    public int[] solution(int n) {
        ArrayList<Integer> arr = new ArrayList<>();
        arr.add(n);
        while(n>1){
            if(n%2 == 0){
                n/=2;
            }
            else{
                n = 3*n+1;
            }
            arr.add(n);
        }
        int[] answer = new int[arr.size()];
        for(int i = 0; i<arr.size(); i++){
            answer[i] = arr.get(i);
        }
        return answer;
    }
}
//trim() 문자열 앞 뒤의 공백 제거, "\\s+" 하나 이상의 공백을 의미
class Solution {
    public String[] solution(String my_string) {
        String[] answer = my_string.trim().split("\\s+");
        return answer;
    }
}
