import java.util.ArrayList;
class Solution {
    public int[] solution(int[] arr, boolean[] flag) {
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = 0; i<arr.length; i++){
            if(flag[i]){
                for(int j = 0; j<arr[i]*2; j++){
                    list.add(arr[i]);
                }
            }
            else{
                int num = arr[i];
                int size = list.size();
                if (size >= num) {
                    for (int j = 0; j < num; j++) {
                        list.remove(size - 1 - j);
                    }
                }
            }
        }
        int[] answer = new int[list.size()];
        for(int i = 0; i<list.size(); i++){
            answer[i] = list.get(i);
        }
        return answer;
    }
}

class Solution {
    public String solution(String myString, String pat) {
        String answer = "";
        int len_string = myString.length();
        int len_pat = pat.length();
        for(int i = len_string-len_pat; i>=0; i--){
            String str = myString.substring(i, i+len_pat);
            if(str.equals(pat)){
                answer = myString.substring(0, i+len_pat);
                break;
            }
        }
        return answer;
    }
}

import java.util.Arrays;
class Solution {
    public String solution(String my_string, int[] indices) {
        String answer = "";
        Arrays.sort(indices);
        for(int i = 0; i<indices.length; i++){




class Solution {
    public int[] solution(int[] arr, int[][] queries) {
        int[] answer = new int[arr.length];
        for(int i = 0; i<queries.length; i++){
            for(int j = 0; j<queries[i].length; j++){
                if(){
                    
                }
            }
        }
        return answer;
    }
}
            
        }
        return answer;
    }
}
