class Solution {
    public int[] solution(int[] arr) {
        int len = arr.length;
        int newlen = 0;
        int i = 0;
        
        while(true){
            if(len<=(int)Math.pow(2, i)){
                newlen = (int)Math.pow(2, i);
                break;
            }
            i++;
        }
        int[] answer = new int[newlen];
        for(int j = 0; j<newlen; j++){
            if(len<=j)
                answer[j] = 0;
            else
                answer[j] = arr[j];
        }

        return answer;
    }
}

=> while 문 수정
class Solution {
    public int[] solution(int[] arr) {
        int len = arr.length;
        int newlen = 1;
        int i = 0;
        
        while(newlen < len){
            newlen*=2;
        }
        int[] answer = new int[newlen];
        for(int j = 0; j<newlen; j++){
            if(len<=j)
                answer[j] = 0;
            else
                answer[j] = arr[j];
        }

        return answer;
    }
}

class Solution {
    public int solution(int[] num_list) {
        int answer = 0;
        for(int i = 0; i<num_list.length; i++){
            int n = num_list[i];
            while(n > 1){
                if(n%2 == 0){
                    n/=2;
                }
                else{
                    n=(n-1)/2;
                }
                answer++;
            }
        }
        return answer;
    }
}

class Solution {
    public boolean solution(boolean x1, boolean x2, boolean x3, boolean x4) {
        boolean answer = false;
        boolean a1 = false;
        boolean a2 = false;
        if(x1 == true || x2 == true){
            a1 = true;
        }
    
        if(x3 == true || x4 == true){
            a2 = true;
        }
        
        if(a1 == true && a2 == true)
            answer = true;
        return answer;
    }
}

class Solution {
    public int[] solution(int[] arr, int[][] queries) {
        int a;
        for(int i = 0; i<queries.length; i++){
            a = arr[queries[i][0]];
            arr[queries[i][0]] = arr[queries[i][1]];
            arr[queries[i][1]] = a;
        }
        return arr;
    }
}

class Solution {
    public int solution(String[] strArr) {
        int answer = 0;
        int[] arr = new int[31];
        for(int i = 0; i<strArr.length; i++){
            arr[strArr[i].length()]++;
        }
        
        for(int i = 0; i<31; i++){
            answer = Math.max(answer, arr[i]);
        }
        return answer;
    }
}

import java.util.*;
class Solution {
    public List<String> solution(String myStr) {
        List<String> answer = new ArrayList<>();
        myStr = myStr.replace("a"," ");
        myStr = myStr.replace("b"," ");
        myStr = myStr.replace("c"," ");
        String[] list = myStr.split(" ");
        for (String i : list)
            if (!i.equals(""))
                answer.add(i);
        if (answer.size()==0) answer.add("EMPTY");
        return answer;
    }
}

class Solution {
    public int[] solution(int[] arr) {
        int[] answer = {-1};
        int fidx = -1;
        int lidx = -1;
        for(int i = 0; i<arr.length; i++){
            if(arr[i] == 2){
                if(fidx != -1){
                    lidx = i;
                }
                else{
                    fidx = i;
                    lidx = i;
                }
            }
        }
        if(fidx != -1){
            answer = new int[lidx-fidx+1];
            int idx = 0;
            for(int i = fidx; i<=lidx; i++){
                answer[idx++] = arr[i];
            }
        }
        return answer;
    }
}

or

import java.util.Arrays;
class Solution {
    public int[] solution(int[] arr) {
        int[] answer = {-1};
        int fidx = -1;
        int lidx = -1;
        for(int i = 0; i<arr.length; i++){
            if(arr[i] == 2){
                if(fidx != -1){
                    lidx = i;
                }
                else{
                    fidx = i;
                    lidx = i;
                }
            }
        }
        if(fidx != -1)
            answer = Arrays.copyOfRange(arr, fidx, lidx+1);
        return answer;
    }
}

class Solution {
    public int[] solution(int[] arr, int[][] queries) {
        for(int i = 0; i<queries.length; i++){
            int s = queries[i][0];
            int e = queries[i][1];
            int k = queries[i][2];
            
            for(int j = s; j<=e; j++){
                if(j%k == 0)
                    arr[j]++;
            }
            
        }
        return arr;
    }
}

class Solution {
    public String solution(int q, int r, String code) {
        String answer = "";
        char[] carr = code.toCharArray();
        for(int i = 0; i<carr.length; i++){
            if(i%q == r){
                answer+=carr[i];
            }
        }
        return answer;
    }
}

