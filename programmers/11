import java.util.Arrays;
class Solution {
    public String[] solution(String[] str_list) {
        String[] answer={};
        for(int i = 0; i<str_list.length; i++){
            if(str_list[i].equals("l")){
                answer = Arrays.copyOfRange(str_list, 0, i);
                break;
            }
            else if(str_list[i].equals("r")){
                answer = Arrays.copyOfRange(str_list, i+1, str_list.length);
                break;
            }
        }    
        return answer;
    }
}
or

import java.util.Arrays;
class Solution {
    public String[] solution(String[] str_list) {
        String[] answer={};
        ArrayList<String> a = str_list.toArray(new String[str_list.size()]);
        int i1 = a.indexOf("l");
        int i2 = a.indexOf("r");
        if(i1 <= i2){
           answer = Arrays.copyOfRange(str_list, 0, i1);
        }
        else{
           answer = Arrays.copyOfRange(str_list, i2+1, str_list.length);
        }

        return answer;
    }
}

import java.util.ArrayList;
class Solution {
    public int[] solution(int[] arr) {
        int i = 0;
        ArrayList<Integer> s = new ArrayList<>();
        while(i<arr.length){
            if(s.isEmpty()){
                s.add(arr[i]);
                i++;
            }
            else{
                if(s.get(s.size()-1)<arr[i]){
                    s.add(arr[i]);
                    i++;
                }
                else{
                    s.remove(s.size()-1);
                }
            }
        }
        int[] stk = new int[s.size()];
        for(int j = 0; j<s.size(); j++){
            stk[j] = s.get(j);
        }
        return stk;
    }
}

import java.util.ArrayList;
class Solution {
    public int[] solution(int[] arr) {
        int i = 0;
        ArrayList<Integer> s = new ArrayList<>();
        while(i<arr.length){
            if(s.isEmpty()){
                s.add(arr[i]);
                i++;
            }
            else{
                if(s.get(s.size()-1) == arr[i]){
                    s.remove(s.size()-1);
                    i++;                 
                }
                else{
                   s.add(arr[i]);
                    i++; 
                }
            }
        }
       
        if(s.isEmpty()){
            return new int[]{-1};
        }
        
        int[] stk = new int[s.size()];

        for(int j = 0; j<s.size(); j++){
            stk[j] = s.get(j);
        }
        return stk;
    }
}

//BigInteger=> 정수의 크기에 제한을 두지 않아서 매우 큰 값을 다룰 수 있음
//정수형으로의 타입 변환이 필요하지 않고 문자열 형태로 숫자를 입력받아 내부적으로 해당 문자열을 정수로 변환하여 처리한다. _꼬마돌님 티스토리 참

import java.math.BigInteger;
class Solution {
    public String solution(String a, String b) {
        BigInteger A = new BigInteger(a);
        BigInteger B = new BigInteger(b);
        BigInteger sum = A.add(B);
        String answer = sum.toString();
        return answer;
    }
}
//수정 필요
import java.util.Arrays;
class Solution {
    public int solution(int a, int b, int c, int d) {
        int answer = 0;
        int[] arr = {a, b, c, d};
        Arrays.sort(arr);
        if(arr[0] == arr[3]){
            answer = 1111*a;
        }
        else if(arr[0] == arr[2] && arr[0] != arr[3]){
            answer =(int)(Math.pow(10*arr[0]+arr[3], 2));
        }
        else if(arr[0] != arr[2] && arr[2] == arr[3]){
            answer = (arr[0]+arr[2])*Math.abs(arr[0]-arr[2]);
        }
        else if(arr[0] == arr[1] && arr[2] != arr[3]){
            answer = arr[2]* arr[3];
        }
        else{
            answer = arr[0];
        }
        return answer;
    }
}

class Solution {
    public String solution(String my_string, int[][] queries) {
        String answer = "";
        StringBuilder sb = new StringBuilder(my_string);
        for(int i = 0; i<queries.length; i++){
            int s = queries[i][0];
            int e = queries[i][1];
            StringBuilder ssb = new StringBuilder(sb.substring(s, e+1));
            ssb.reverse();
            sb.replace(s, e+1, s.toString());
        
        }
        return s.toString();
    }
}
