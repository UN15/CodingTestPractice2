class Solution {
    public int solution(int[] a, int[] b) {
        int answer = 0;
        for(int i = 0; i<a.length; i++){
            answer+=a[i]*b[i];
        }
        return answer;
    }
}

class Solution {
    public String solution(String s) {
        String answer = "";
        if(s.length()%2 == 0){
            answer = s.substring(s.length()/2-1, s.length()/2+1);
        }
        else{
            answer=s.substring(s.length()/2, s.length()/2+1);
        }
        return answer;
    }
}

class Solution {
    public String solution(int n) {
        String answer = "";
        for(int i = 1; i<=n/2; i++)
            answer+="수박";
        if(n%2 != 0)
            answer+="수";
        
        return answer;
    }
}

class Solution {
    public static int divisor(int n){
        int count = 0;
        for(int i = 1; i<=n; i++)
            if(n%i == 0)
                count++;
        return count;
    }
    public int solution(int left, int right) {
        int answer = 0;
        for(int i = left; i<=right; i++){
            if(divisor(i)%2 == 0)
                answer+=i;
            else
                answer-=i;
        }
        return answer;
    }
}

import java.util.*;
class Solution {
    public String solution(String s) {
        String answer = "";
        String[] sarr = s.split("");
        Arrays.sort(sarr, Collections.reverseOrder());
        for(String e: sarr)
            answer+=e;
        return answer;
    }
}
or
import java.util.Arrays;

class Solution {
    public String solution(String s) {
        char[] arr = s.toCharArray();
        Arrays.sort(arr);
        
        StringBuffer sb = new StringBuffer(new String(arr));
        String answer = sb.reverse().toString();
        
        return answer;
    }
}

class Solution {
    public long solution(int price, int money, int count) {
        long answer = -1;
        long sum = 0;
        for(int i = 1; i<=count; i++){
            sum+=i*price;
        }
        answer = sum-money;
        if(answer<0)
            return 0;
        
        return answer;
    }
}

class Solution {
    public boolean solution(String s) {
        boolean answer = true;
        int len = s.length();
        for(int i = 0; i<len; i++){
            if(len == 4 || len == 6){
                if(Character.isAlphabetic(s.charAt(i)))
                    return false;
            }
            else
                return false;
        }
        return answer;
    }
}

class Solution {
    public boolean solution(String s) {
        boolean answer = true;
        int len = s.length();
        for(int i = 0; i<len; i++){
            if(len == 4 || len == 6){
                // if(Character.isAlphabetic(s.charAt(i)))
                if(s.charAt(i)>=65) //65 이상부터 알파벳임 숫자는 48-57
                    return false;
            }
            else
                return false;
        }
        return answer;
    }
}

class Solution {
    public int[][] solution(int[][] arr1, int[][] arr2) {
        int[][] answer = new int[arr1.length][arr1[0].length];
        for(int i = 0; i<arr1.length; i++)
            for(int j = 0; j<arr1[0].length; j++)
                answer[i][j] = arr1[i][j]+arr2[i][j];
        return answer;
    }
}

import java.util.Scanner;

class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        for(int i = 0; i<b; i++){
            for(int j = 0; j<a; j++){
                System.out.print("*");
            }
            System.out.println();
        }
            
    }
}

class Solution {
    public int solution(int[] number) {
        int answer = 0;
        for(int i = 0; i<number.length; i++){
            for(int j = i+1; j<number.length; j++){
                for(int k = j+1; k<number.length; k++){
                    if(number[i]+number[j]+number[k] == 0)
                        answer++;
                }
            }
        }
        return answer;
    }
}

class Solution {
    public int[] solution(int n, int m) {
        int[] answer = new int[2];
        int min = Math.min(n, m);
        int a = 1;
        int i = 2;
        while(i<=min){
            if(n%i == 0 && m%i == 0){
                a*=i;
                n/=i;
                m/=i;
            }
            else{
                i++;
            }
        }
        answer[0] = a;
        answer[1] = a*n*m;
        
        
        return answer;
    }
}

// import java.util.*;

// public class Solution {
//     public int[] solution(int []arr) {
//         ArrayList<Integer> a = new ArrayList<>();
//         a.add(arr[0]);
//         for(int i = 1; i<arr.length; i++){
//             if(arr[i] != arr[i-1] ){
//                 a.add(arr[i]);
//             }
//         }
        
//         int[] answer = new int[a.size()];
//         for(int i = 0; i<a.size(); i++)
//             answer[i] = a.get(i);
        
//         return answer;
//     }
// }
or
import java.util.*;

public class Solution {
    public int[] solution(int []arr) {
        Stack<Integer> s = new Stack<>();
        for(int i : arr){
            if(s.isEmpty() || !s.peek().equals(i))
                s.add(i);
        }
        
        int[] answer = new int[s.size()];
        for(int i = s.size()-1; i>=0; i--){
            answer[i] = s.pop();
        }
        return answer;
    }
}

import java.util.*;
class Solution {
    public int solution(int[] d, int budget) {
        int answer = 0;
        Arrays.sort(d);
        int sum = 0;
        for(int i = 0; i<d.length; i++){
            sum+=d[i];
            if(sum>budget)
                return i;
        }
        answer = d.length;
        
        return answer;
    }
}

