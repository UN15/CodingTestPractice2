import java.util.*;
class Solution {
    public int solution(int k, int m, int[] score) {
        int answer = 0;
        Arrays.sort(score);
        for(int i = score.length-1; i-m+1>=0; i-= m){
            answer+=score[i-m+1]*m;
        }
        return answer;
    }
}

class Solution {
    public int solution(int number, int limit, int power) {
        int answer = 0;
        int count = 0;
        int[] arr = new int[number];
        
        for(int i = 1; i<=number; i++){
            count = 0;
            for(int j = 1; j<=Math.sqrt(i); j++){
                if(j*j == i)
                    count++;
                else if(i%j == 0)
                    count+=2;
            }
            arr[i-1] = count;
        }
        for(int i = 0; i<number; i++){
            if(arr[i]>limit)
                answer+=power;
            else
                answer+=arr[i];
        }
        return answer;
    }
}


// import java.util.*;
// class Solution {
//     public String[] solution(String[] strings, int n) {
//         String[] answer = new String[strings.length];
//         ArrayList<String> list = new ArrayList<>();
//         for(int i = 0; i<strings.length; i++){
//              list.add(strings[i].charAt(n)+strings[i]);
//         }
//         Collections.sort(list);
//         for(int i = 0; i<list.size(); i++){
//             answer[i] = list.get(i).substring(1);
//         }
//         return answer;
//     }
// }
or
import java.util.*;

class Solution {
  public String[] solution(String[] strings, int n) {
      Arrays.sort(strings);
      Arrays.sort(strings, new Comparator<String>(){
          @Override
          public int compare(String s1, String s2){
              if(s1.charAt(n) > s2.charAt(n)) return 1; //
              else if(s1.charAt(n) < s2.charAt(n)) return -1;
              else return 0;
          }
      });
      return strings;
  }
}

// class Solution {
//     public String solution(String s, int n) {
//         String answer = "";
//         for(int i = 0; i<s.length(); i++){
//             if(s.charAt(i) != ' '){
//                 if(s.charAt(i)>='A' && s.charAt(i)<='Z'){
//                     if(s.charAt(i)+n >'Z')
//                         answer+=(char)(s.charAt(i)+n-26);
//                     else
//                         answer+=(char)(s.charAt(i)+n);
//                 }
//                 else if(s.charAt(i)>='a' && s.charAt(i)<='z'){
//                     if(s.charAt(i)+n >'z')
//                         answer+=(char)(s.charAt(i)+n-26);
//                     else
//                         answer+=(char)(s.charAt(i)+n);
//                 }
//             }
//             else
//                 answer+=' ';
//         }
//         return answer;
//     }
// }
or //밑에 코드가 너무 좋은 
class Solution {
    public String solution(String s, int n) {
          String answer = "";
          
          
          for(int i=0; i<s.length(); i++) {
              char ch = s.charAt(i);
              
              if(Character.isLowerCase(ch)) { //소문자
                  ch = (char) ((ch - 'a' + n) % 26 + 'a');
              } else if(Character.isUpperCase(ch)) { //대문자
                  ch = (char) ((ch - 'A' + n) % 26 + 'A');
              }
              
              answer += ch;
          }
              
          
          return answer;
      }
}
