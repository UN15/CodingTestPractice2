class Solution {
    public int solution(int[] bandage, int health, int[][] attacks) {
        int answer = health;
        int count = 0;
        int attackTime = attacks[0][0];
        int attackDamage = attacks[0][1];
        int a = 0;
        for(int i = 1; i<=attacks[attacks.length-1][0]; i++){
            count++;
            if(attackTime == i){
                answer-= attackDamage;
                a++;
                count = 0;
                if(a<attacks.length){
                    attackTime = attacks[a][0];
                    attackDamage = attacks[a][1];
                }
            }
            else{
                answer+=bandage[1];
            }
            
            if(count==bandage[0]){
                count = 0;
                answer+=bandage[2];
            }
            
            if(answer>health)
                answer = health;
            
            System.out.println(i+": "+ answer+" "+count);
            if(answer<=0)
                return -1;
        }
        
        return answer;
    }
}

class Solution {

    public String solution(String video_len, String pos, String op_start, String op_end, String[] commands) {
        String answer = "";
        String[] op_arr = op_start.split(":");
        String[] end_arr = op_end.split(":");
        String[] pos_arr = pos.split(":");
        String[] video_arr = video_len.split(":");
        
        int op_min = Integer.parseInt(op_arr[0]);
        int op_sec = Integer.parseInt(op_arr[1]);
        
        int end_min = Integer.parseInt(end_arr[0]);
        int end_sec = Integer.parseInt(end_arr[1]);

        int min = Integer.parseInt(pos_arr[0]);
        int sec = Integer.parseInt(pos_arr[1]);

        int v_min = Integer.parseInt(video_arr[0]);
        int v_sec = Integer.parseInt(video_arr[1]);

        for(int i = 0; i<commands.length; i++){    
            String[] o = opening(min, sec, op_min, op_sec, end_min, end_sec).split(":");
            min = Integer.parseInt(o[0]);
            sec = Integer.parseInt(o[1]);
            
            switch(commands[i]){
                case "prev":
                    sec-=10;
                    break;
                case "next":
                    sec+=10;
                    break; 
            }
            
            if(sec>=60){
                sec-=60;
                min+=1;
            }
            else if(sec<0){
                sec+=60;
                min-=1;
            }
            
            if(min<0){
                min = 0;
                sec = 0;
            }
            if(min>v_min || (min==v_min && sec>=v_sec)){
                min = v_min;
                sec = v_sec;
            }
             System.out.println(min+" :" + sec);
        }
        
        String[] o = opening(min, sec, op_min, op_sec, end_min, end_sec).split(":");
        min = Integer.parseInt(o[0]);
        sec = Integer.parseInt(o[1]);
       
        if(min<10)
            answer+="0"+min+":";
        else
            answer+=min+":";
        
        if(sec<10)
            answer+="0"+sec;
        else
            answer+=sec;
     
        return answer;
    }
    
    public String opening(int min, int sec, int op_min, int op_sec, int end_min, int end_sec){
        if((min*60+sec>=op_min*60+op_sec) && (min*60+sec<=end_min*60+end_sec)){
            min = end_min;
            sec = end_sec;
        }
        return min+":"+sec;
    }
}

class Solution {
    public int solution(String[] friends, String[] gifts) {
        int answer = 0;
        int[][] arr = new int[friends.length][friends.length];
        int[] result = new int[friends.length];
        int a, b;

        for(int i = 0; i<gifts.length; i++){
            String s = gifts[i].split(" ");
            for(int j = 0; j<friends.length; j++){
                if(s[0].equals(friends[j]))
                    a = j;
                else if(s[1].equals(friends[j]))
                    b = j;
            }
            arr[a][b]+=1;        
        }
        for(int i = 0; i<friends.length; i++){
            
        }

        return answer;
    }
}
